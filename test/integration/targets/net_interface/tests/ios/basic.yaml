---
- debug: msg="START net_interface ios/basic.yaml"

- name: Confgure interface
  net_interface:
    name: GigabitEthernet0/2
    description: test-interface-initial
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/2" in result.commands'
      - '"description test-interface-initial" in result.commands'

- name: Confgure interface (idempotent)
  net_interface:
    name: GigabitEthernet0/2
    description: test-interface-initial
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == false'

- name: Confgure interface parameters
  net_interface:
    name: GigabitEthernet0/2
    description: test-interface
    speed: 100
    duplex: half
    mtu: 512
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/2" in result.commands'
      - '"description test-interface" in result.commands'
      - '"speed 100" in result.commands'
      - '"duplex half" in result.commands'
      - '"mtu 512" in result.commands'

- name: Change interface parameters
  net_interface:
    name: GigabitEthernet0/2
    description: test-interface-1
    speed: 10
    duplex: full
    mtu: 256
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/2" in result.commands'
      - '"description test-interface-1" in result.commands'
      - '"speed 10" in result.commands'
      - '"duplex full" in result.commands'
      - '"mtu 256" in result.commands'

- name: Delete interface parameters
  net_interface:
    name: GigabitEthernet0/2
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/2" in result.commands'
      - '"description configured by ios_interface" in result.commands'
      - '"no speed 10" in result.commands'
      - '"no duplex full" in result.commands'
      - '"no mtu 256" in result.commands'

- name: Delete interface parameters (idempotent)
  net_interface:
    name: GigabitEthernet0/2
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == false'

- name: Disable interface
  net_interface:
    name: GigabitEthernet0/2
    state: down
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/2" in result.commands'
      - '"shutdown" in result.commands'

- name: Enable interface
  net_interface:
    name: GigabitEthernet0/2
    state: up
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/2" in result.commands'
      - '"no shutdown" in result.commands'

- name: Confgure second interface (setup)
  net_interface:
    name: GigabitEthernet0/1
    description: test-interface-initial
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/1" in result.commands'
      - '"description test-interface-initial" in result.commands'

- name: Add interface aggregate
  net_interface:
    aggregate:
    - { name: GigabitEthernet0/1, speed: 10, duplex: half, mtu: 256, description: test-interface-1 }
    - { name: GigabitEthernet0/2, speed: 100, duplex: full, mtu: 516, description: test-interface-2 }
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/1" in result.commands'
      - '"speed 10" in result.commands'
      - '"description test-interface-1" in result.commands'
      - '"duplex half" in result.commands'
      - '"mtu 256" in result.commands'
      - '"interface GigabitEthernet0/2" in result.commands'
      - '"speed 100" in result.commands'
      - '"description test-interface-2" in result.commands'
      - '"duplex full" in result.commands'
      - '"mtu 516" in result.commands'

- name: Add interface aggregate (idempotent)
  net_interface:
    aggregate:
    - { name: GigabitEthernet0/1, speed: 10, duplex: half, mtu: 256, description: test-interface-1 }
    - { name: GigabitEthernet0/2, speed: 100, duplex: full, mtu: 516, description: test-interface-2 }
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == false'


- name: Change interface parameters in aggregate
  net_interface:
    aggregate:
    - { name: GigabitEthernet0/1 }
    - { name: GigabitEthernet0/2 }
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/1" in result.commands'
      - '"no speed 10" in result.commands'
      - '"description configured by ios_interface" in result.commands'
      - '"no duplex half" in result.commands'
      - '"no mtu 256" in result.commands'
      - '"interface GigabitEthernet0/2" in result.commands'
      - '"no speed 100" in result.commands'
      - '"description configured by ios_interface" in result.commands'
      - '"no duplex full" in result.commands'
      - '"no mtu 516" in result.commands'

- name: Disable interface aggregate
  net_interface:
    aggregate:
    - { name: GigabitEthernet0/1, state: down }
    - { name: GigabitEthernet0/2, state: down }
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/1" in result.commands'
      - '"shutdown" in result.commands'
      - '"interface GigabitEthernet0/2" in result.commands'
      - '"shutdown" in result.commands'

- name: Enable interface aggregate
  net_interface:
    aggregate:
    - { name: GigabitEthernet0/1, state: up }
    - { name: GigabitEthernet0/2, state: up }
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface GigabitEthernet0/1" in result.commands'
      - '"no shutdown" in result.commands'
      - '"interface GigabitEthernet0/2" in result.commands'
      - '"no shutdown" in result.commands'

- name: Create loopback interface aggregate
  net_interface:
    aggregate:
    - { name: Loopback9 }
    - { name: Loopback10 }
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"interface Loopback9" in result.commands'
      - '"description configured by ios_interface" in result.commands'
      - '"interface Loopback10" in result.commands'
      - '"description configured by ios_interface" in result.commands'

- name: Delete loopback interface aggregate
  net_interface:
    aggregate:
    - { name: Loopback9, state: absent }
    - { name: Loopback10, state: absent }
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == true'
      - '"no interface Loopback9" in result.commands'
      - '"no interface Loopback10" in result.commands'

- name: Delete loopback interface aggregate (idempotent)
  net_interface:
    aggregate:
    - { name: Loopback9, state: absent }
    - { name: Loopback10, state: absent }
    state: present
    authorize: yes
    provider: "{{ cli }}"
  register: result

- assert:
    that:
      - 'result.changed == false'

- debug: msg="END net_interface ios/basic.yaml"